
plugins {
    id "java"
    id "java-library"
    id "checkstyle"
    id "jacoco"
    id "signing"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version '1.2.0'
    id "idea"
}

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    dependsOn 'cleanTest'
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

checkstyle {
    toolVersion = "9.3"
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    checkstyleTest.enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifactId = 'launchdarkly-openfeature-serverprovider'

            pom {
                name = 'LaunchDarkly OpenFeature provider for the Server-Side SDK for Java'
                packaging = 'jar'
                description = 'Official LaunchDarkly OpenFeature provider for the Server-Side SDK for Java'
                url = 'https://github.com/launchdarkly/openfeature-java-server'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name = 'LaunchDarkly SDK Team'
                        email = 'sdks@launchdarkly.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/launchdarkly/openfeature-java-server'
                    developerConnection = 'scm:git:ssh:git@github.com:launchdarkly/openfeature-java-server.git'
                    url = 'https://github.com/launchdarkly/openfeature-java-server'
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) { t ->
    onlyIf { !shouldSkipSigning() } // so we can build jars for testing in CI
}

def shouldSkipSigning() {
    return "1".equals(project.findProperty("LD_SKIP_SIGNING")) ||
            "1".equals(System.getenv("LD_SKIP_SIGNING"))
}

nexusPublishing {
    clientTimeout = java.time.Duration.ofMinutes(2) // we've seen extremely long delays in creating repositories
    repositories {
        sonatype {
            username = ossrhUsername
            password = ossrhPassword
        }
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '[6.0.0, 7.0.0)'
    implementation 'dev.openfeature:sdk:[1.2.0,2.0.0)'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:3.+"
}

